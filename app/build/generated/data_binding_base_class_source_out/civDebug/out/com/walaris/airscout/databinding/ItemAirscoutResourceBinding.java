// Generated by view binder compiler. Do not edit!
package com.walaris.airscout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.walaris.airscout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAirscoutResourceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton editButton;

  @NonNull
  public final ImageButton previewButton;

  @NonNull
  public final TextView resourceControl;

  @NonNull
  public final TextView resourceDescription;

  @NonNull
  public final TextView resourceFrustum;

  @NonNull
  public final TextView resourceLocation;

  @NonNull
  public final TextView resourceName;

  @NonNull
  public final LinearLayout resourceRoot;

  @NonNull
  public final TextView resourceStream;

  private ItemAirscoutResourceBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton deleteButton, @NonNull ImageButton editButton,
      @NonNull ImageButton previewButton, @NonNull TextView resourceControl,
      @NonNull TextView resourceDescription, @NonNull TextView resourceFrustum,
      @NonNull TextView resourceLocation, @NonNull TextView resourceName,
      @NonNull LinearLayout resourceRoot, @NonNull TextView resourceStream) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.previewButton = previewButton;
    this.resourceControl = resourceControl;
    this.resourceDescription = resourceDescription;
    this.resourceFrustum = resourceFrustum;
    this.resourceLocation = resourceLocation;
    this.resourceName = resourceName;
    this.resourceRoot = resourceRoot;
    this.resourceStream = resourceStream;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAirscoutResourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAirscoutResourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_airscout_resource, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAirscoutResourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      ImageButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.previewButton;
      ImageButton previewButton = ViewBindings.findChildViewById(rootView, id);
      if (previewButton == null) {
        break missingId;
      }

      id = R.id.resourceControl;
      TextView resourceControl = ViewBindings.findChildViewById(rootView, id);
      if (resourceControl == null) {
        break missingId;
      }

      id = R.id.resourceDescription;
      TextView resourceDescription = ViewBindings.findChildViewById(rootView, id);
      if (resourceDescription == null) {
        break missingId;
      }

      id = R.id.resourceFrustum;
      TextView resourceFrustum = ViewBindings.findChildViewById(rootView, id);
      if (resourceFrustum == null) {
        break missingId;
      }

      id = R.id.resourceLocation;
      TextView resourceLocation = ViewBindings.findChildViewById(rootView, id);
      if (resourceLocation == null) {
        break missingId;
      }

      id = R.id.resourceName;
      TextView resourceName = ViewBindings.findChildViewById(rootView, id);
      if (resourceName == null) {
        break missingId;
      }

      LinearLayout resourceRoot = (LinearLayout) rootView;

      id = R.id.resourceStream;
      TextView resourceStream = ViewBindings.findChildViewById(rootView, id);
      if (resourceStream == null) {
        break missingId;
      }

      return new ItemAirscoutResourceBinding((LinearLayout) rootView, deleteButton, editButton,
          previewButton, resourceControl, resourceDescription, resourceFrustum, resourceLocation,
          resourceName, resourceRoot, resourceStream);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
