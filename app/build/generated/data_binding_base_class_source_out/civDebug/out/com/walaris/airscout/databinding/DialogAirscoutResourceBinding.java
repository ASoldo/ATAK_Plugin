// Generated by view binder compiler. Do not edit!
package com.walaris.airscout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.walaris.airscout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAirscoutResourceBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout circleFields;

  @NonNull
  public final LinearLayout coneFields;

  @NonNull
  public final EditText inputAltitude;

  @NonNull
  public final EditText inputBearing;

  @NonNull
  public final EditText inputControlUrl;

  @NonNull
  public final EditText inputDescription;

  @NonNull
  public final RadioGroup inputFrustumGroup;

  @NonNull
  public final EditText inputHorizontalFov;

  @NonNull
  public final EditText inputLatitude;

  @NonNull
  public final EditText inputLongitude;

  @NonNull
  public final EditText inputName;

  @NonNull
  public final EditText inputRadius;

  @NonNull
  public final EditText inputRange;

  @NonNull
  public final EditText inputStreamUrl;

  @NonNull
  public final EditText inputVerticalFov;

  @NonNull
  public final RadioButton radioFrustumCircle;

  @NonNull
  public final RadioButton radioFrustumCone;

  @NonNull
  public final Button useMapCenterButton;

  private DialogAirscoutResourceBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout circleFields, @NonNull LinearLayout coneFields,
      @NonNull EditText inputAltitude, @NonNull EditText inputBearing,
      @NonNull EditText inputControlUrl, @NonNull EditText inputDescription,
      @NonNull RadioGroup inputFrustumGroup, @NonNull EditText inputHorizontalFov,
      @NonNull EditText inputLatitude, @NonNull EditText inputLongitude,
      @NonNull EditText inputName, @NonNull EditText inputRadius, @NonNull EditText inputRange,
      @NonNull EditText inputStreamUrl, @NonNull EditText inputVerticalFov,
      @NonNull RadioButton radioFrustumCircle, @NonNull RadioButton radioFrustumCone,
      @NonNull Button useMapCenterButton) {
    this.rootView = rootView;
    this.circleFields = circleFields;
    this.coneFields = coneFields;
    this.inputAltitude = inputAltitude;
    this.inputBearing = inputBearing;
    this.inputControlUrl = inputControlUrl;
    this.inputDescription = inputDescription;
    this.inputFrustumGroup = inputFrustumGroup;
    this.inputHorizontalFov = inputHorizontalFov;
    this.inputLatitude = inputLatitude;
    this.inputLongitude = inputLongitude;
    this.inputName = inputName;
    this.inputRadius = inputRadius;
    this.inputRange = inputRange;
    this.inputStreamUrl = inputStreamUrl;
    this.inputVerticalFov = inputVerticalFov;
    this.radioFrustumCircle = radioFrustumCircle;
    this.radioFrustumCone = radioFrustumCone;
    this.useMapCenterButton = useMapCenterButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAirscoutResourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAirscoutResourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_airscout_resource, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAirscoutResourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circleFields;
      LinearLayout circleFields = ViewBindings.findChildViewById(rootView, id);
      if (circleFields == null) {
        break missingId;
      }

      id = R.id.coneFields;
      LinearLayout coneFields = ViewBindings.findChildViewById(rootView, id);
      if (coneFields == null) {
        break missingId;
      }

      id = R.id.inputAltitude;
      EditText inputAltitude = ViewBindings.findChildViewById(rootView, id);
      if (inputAltitude == null) {
        break missingId;
      }

      id = R.id.inputBearing;
      EditText inputBearing = ViewBindings.findChildViewById(rootView, id);
      if (inputBearing == null) {
        break missingId;
      }

      id = R.id.inputControlUrl;
      EditText inputControlUrl = ViewBindings.findChildViewById(rootView, id);
      if (inputControlUrl == null) {
        break missingId;
      }

      id = R.id.inputDescription;
      EditText inputDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputDescription == null) {
        break missingId;
      }

      id = R.id.inputFrustumGroup;
      RadioGroup inputFrustumGroup = ViewBindings.findChildViewById(rootView, id);
      if (inputFrustumGroup == null) {
        break missingId;
      }

      id = R.id.inputHorizontalFov;
      EditText inputHorizontalFov = ViewBindings.findChildViewById(rootView, id);
      if (inputHorizontalFov == null) {
        break missingId;
      }

      id = R.id.inputLatitude;
      EditText inputLatitude = ViewBindings.findChildViewById(rootView, id);
      if (inputLatitude == null) {
        break missingId;
      }

      id = R.id.inputLongitude;
      EditText inputLongitude = ViewBindings.findChildViewById(rootView, id);
      if (inputLongitude == null) {
        break missingId;
      }

      id = R.id.inputName;
      EditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.inputRadius;
      EditText inputRadius = ViewBindings.findChildViewById(rootView, id);
      if (inputRadius == null) {
        break missingId;
      }

      id = R.id.inputRange;
      EditText inputRange = ViewBindings.findChildViewById(rootView, id);
      if (inputRange == null) {
        break missingId;
      }

      id = R.id.inputStreamUrl;
      EditText inputStreamUrl = ViewBindings.findChildViewById(rootView, id);
      if (inputStreamUrl == null) {
        break missingId;
      }

      id = R.id.inputVerticalFov;
      EditText inputVerticalFov = ViewBindings.findChildViewById(rootView, id);
      if (inputVerticalFov == null) {
        break missingId;
      }

      id = R.id.radioFrustumCircle;
      RadioButton radioFrustumCircle = ViewBindings.findChildViewById(rootView, id);
      if (radioFrustumCircle == null) {
        break missingId;
      }

      id = R.id.radioFrustumCone;
      RadioButton radioFrustumCone = ViewBindings.findChildViewById(rootView, id);
      if (radioFrustumCone == null) {
        break missingId;
      }

      id = R.id.useMapCenterButton;
      Button useMapCenterButton = ViewBindings.findChildViewById(rootView, id);
      if (useMapCenterButton == null) {
        break missingId;
      }

      return new DialogAirscoutResourceBinding((ScrollView) rootView, circleFields, coneFields,
          inputAltitude, inputBearing, inputControlUrl, inputDescription, inputFrustumGroup,
          inputHorizontalFov, inputLatitude, inputLongitude, inputName, inputRadius, inputRange,
          inputStreamUrl, inputVerticalFov, radioFrustumCircle, radioFrustumCone,
          useMapCenterButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
