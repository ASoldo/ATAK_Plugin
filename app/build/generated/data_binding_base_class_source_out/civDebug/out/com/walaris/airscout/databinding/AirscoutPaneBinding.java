// Generated by view binder compiler. Do not edit!
package com.walaris.airscout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.media3.ui.PlayerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.walaris.airscout.R;
import com.walaris.airscout.ui.DualJoystickView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AirscoutPaneBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button addCameraButton;

  @NonNull
  public final DualJoystickView joystickOverlay;

  @NonNull
  public final Button removeCameraButton;

  @NonNull
  public final TextView selectedFeedLabel;

  @NonNull
  public final TextView statusMessage;

  @NonNull
  public final ImageView videoImageView;

  @NonNull
  public final PlayerView videoPlayerView;

  private AirscoutPaneBinding(@NonNull FrameLayout rootView, @NonNull Button addCameraButton,
      @NonNull DualJoystickView joystickOverlay, @NonNull Button removeCameraButton,
      @NonNull TextView selectedFeedLabel, @NonNull TextView statusMessage,
      @NonNull ImageView videoImageView, @NonNull PlayerView videoPlayerView) {
    this.rootView = rootView;
    this.addCameraButton = addCameraButton;
    this.joystickOverlay = joystickOverlay;
    this.removeCameraButton = removeCameraButton;
    this.selectedFeedLabel = selectedFeedLabel;
    this.statusMessage = statusMessage;
    this.videoImageView = videoImageView;
    this.videoPlayerView = videoPlayerView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AirscoutPaneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AirscoutPaneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.airscout_pane, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AirscoutPaneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCameraButton;
      Button addCameraButton = ViewBindings.findChildViewById(rootView, id);
      if (addCameraButton == null) {
        break missingId;
      }

      id = R.id.joystickOverlay;
      DualJoystickView joystickOverlay = ViewBindings.findChildViewById(rootView, id);
      if (joystickOverlay == null) {
        break missingId;
      }

      id = R.id.removeCameraButton;
      Button removeCameraButton = ViewBindings.findChildViewById(rootView, id);
      if (removeCameraButton == null) {
        break missingId;
      }

      id = R.id.selectedFeedLabel;
      TextView selectedFeedLabel = ViewBindings.findChildViewById(rootView, id);
      if (selectedFeedLabel == null) {
        break missingId;
      }

      id = R.id.statusMessage;
      TextView statusMessage = ViewBindings.findChildViewById(rootView, id);
      if (statusMessage == null) {
        break missingId;
      }

      id = R.id.videoImageView;
      ImageView videoImageView = ViewBindings.findChildViewById(rootView, id);
      if (videoImageView == null) {
        break missingId;
      }

      id = R.id.videoPlayerView;
      PlayerView videoPlayerView = ViewBindings.findChildViewById(rootView, id);
      if (videoPlayerView == null) {
        break missingId;
      }

      return new AirscoutPaneBinding((FrameLayout) rootView, addCameraButton, joystickOverlay,
          removeCameraButton, selectedFeedLabel, statusMessage, videoImageView, videoPlayerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
