// Generated by view binder compiler. Do not edit!
package com.walaris.airscout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ViewAnimator;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.media3.ui.PlayerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.walaris.airscout.R;
import com.walaris.airscout.ui.DualJoystickView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AirscoutPaneBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton addResourceButton;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ViewAnimator contentSwitcher;

  @NonNull
  public final LinearLayout controlContainer;

  @NonNull
  public final LinearLayout controlHeader;

  @NonNull
  public final TextView controlSubtitle;

  @NonNull
  public final TextView controlTitle;

  @NonNull
  public final TextView emptyMessage;

  @NonNull
  public final ImageButton infoButton;

  @NonNull
  public final DualJoystickView joystickOverlay;

  @NonNull
  public final LinearLayout resourceListContainer;

  @NonNull
  public final TextView resourceListSummary;

  @NonNull
  public final TextView resourceListTitle;

  @NonNull
  public final RecyclerView resourceRecyclerView;

  @NonNull
  public final TextView statusMessage;

  @NonNull
  public final ImageView videoImageView;

  @NonNull
  public final PlayerView videoPlayerView;

  private AirscoutPaneBinding(@NonNull FrameLayout rootView, @NonNull ImageButton addResourceButton,
      @NonNull ImageButton backButton, @NonNull ViewAnimator contentSwitcher,
      @NonNull LinearLayout controlContainer, @NonNull LinearLayout controlHeader,
      @NonNull TextView controlSubtitle, @NonNull TextView controlTitle,
      @NonNull TextView emptyMessage, @NonNull ImageButton infoButton,
      @NonNull DualJoystickView joystickOverlay, @NonNull LinearLayout resourceListContainer,
      @NonNull TextView resourceListSummary, @NonNull TextView resourceListTitle,
      @NonNull RecyclerView resourceRecyclerView, @NonNull TextView statusMessage,
      @NonNull ImageView videoImageView, @NonNull PlayerView videoPlayerView) {
    this.rootView = rootView;
    this.addResourceButton = addResourceButton;
    this.backButton = backButton;
    this.contentSwitcher = contentSwitcher;
    this.controlContainer = controlContainer;
    this.controlHeader = controlHeader;
    this.controlSubtitle = controlSubtitle;
    this.controlTitle = controlTitle;
    this.emptyMessage = emptyMessage;
    this.infoButton = infoButton;
    this.joystickOverlay = joystickOverlay;
    this.resourceListContainer = resourceListContainer;
    this.resourceListSummary = resourceListSummary;
    this.resourceListTitle = resourceListTitle;
    this.resourceRecyclerView = resourceRecyclerView;
    this.statusMessage = statusMessage;
    this.videoImageView = videoImageView;
    this.videoPlayerView = videoPlayerView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AirscoutPaneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AirscoutPaneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.airscout_pane, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AirscoutPaneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addResourceButton;
      ImageButton addResourceButton = ViewBindings.findChildViewById(rootView, id);
      if (addResourceButton == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.contentSwitcher;
      ViewAnimator contentSwitcher = ViewBindings.findChildViewById(rootView, id);
      if (contentSwitcher == null) {
        break missingId;
      }

      id = R.id.controlContainer;
      LinearLayout controlContainer = ViewBindings.findChildViewById(rootView, id);
      if (controlContainer == null) {
        break missingId;
      }

      id = R.id.controlHeader;
      LinearLayout controlHeader = ViewBindings.findChildViewById(rootView, id);
      if (controlHeader == null) {
        break missingId;
      }

      id = R.id.controlSubtitle;
      TextView controlSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (controlSubtitle == null) {
        break missingId;
      }

      id = R.id.controlTitle;
      TextView controlTitle = ViewBindings.findChildViewById(rootView, id);
      if (controlTitle == null) {
        break missingId;
      }

      id = R.id.emptyMessage;
      TextView emptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessage == null) {
        break missingId;
      }

      id = R.id.infoButton;
      ImageButton infoButton = ViewBindings.findChildViewById(rootView, id);
      if (infoButton == null) {
        break missingId;
      }

      id = R.id.joystickOverlay;
      DualJoystickView joystickOverlay = ViewBindings.findChildViewById(rootView, id);
      if (joystickOverlay == null) {
        break missingId;
      }

      id = R.id.resourceListContainer;
      LinearLayout resourceListContainer = ViewBindings.findChildViewById(rootView, id);
      if (resourceListContainer == null) {
        break missingId;
      }

      id = R.id.resourceListSummary;
      TextView resourceListSummary = ViewBindings.findChildViewById(rootView, id);
      if (resourceListSummary == null) {
        break missingId;
      }

      id = R.id.resourceListTitle;
      TextView resourceListTitle = ViewBindings.findChildViewById(rootView, id);
      if (resourceListTitle == null) {
        break missingId;
      }

      id = R.id.resourceRecyclerView;
      RecyclerView resourceRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (resourceRecyclerView == null) {
        break missingId;
      }

      id = R.id.statusMessage;
      TextView statusMessage = ViewBindings.findChildViewById(rootView, id);
      if (statusMessage == null) {
        break missingId;
      }

      id = R.id.videoImageView;
      ImageView videoImageView = ViewBindings.findChildViewById(rootView, id);
      if (videoImageView == null) {
        break missingId;
      }

      id = R.id.videoPlayerView;
      PlayerView videoPlayerView = ViewBindings.findChildViewById(rootView, id);
      if (videoPlayerView == null) {
        break missingId;
      }

      return new AirscoutPaneBinding((FrameLayout) rootView, addResourceButton, backButton,
          contentSwitcher, controlContainer, controlHeader, controlSubtitle, controlTitle,
          emptyMessage, infoButton, joystickOverlay, resourceListContainer, resourceListSummary,
          resourceListTitle, resourceRecyclerView, statusMessage, videoImageView, videoPlayerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
